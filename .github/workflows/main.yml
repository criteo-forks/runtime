name: Build and release runtime
on: 
  pull_request:
  workflow_dispatch:
    inputs:
      tag: 
        type: string
        description: Tagged version to build
  push:
    tags:        
      - '**'
env:
  RUNTIME_VERSION: 8.0.5
  RUNTIME_PATCH: jp
  
jobs:
  
#  build-linux:
    #runs-on: ubuntu-latest
    #container:
      #image: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream8
    #steps:
      #- name: Check out runtime source code
        #uses: actions/checkout@v4
        #with:
          #ref: refs/tags/v${{env.RUNTIME_VERSION}}-${{env.RUNTIME_PATCH}}
      #- name: Build for Linux
        #run: ./build.sh -c Release /p:VersionSuffix=${{env.RUNTIME_PATCH}} /p:StabilizePackageVersion=false /p:OfficialBuildId=20201010.1 /p:NativeOptimizationDataSupported=false
      #- name: Upload runtime arttifact
        #uses: actions/upload-artifact@v4
        #with:
          #name: linux-runtime
          #path: artifacts/packages/Release/Shipping/dotnet-runtime-${{env.RUNTIME_VERSION}}-${{env.RUNTIME_PATCH}}-linux-x64.tar.gz
  #build-windows:
    #runs-on: windows-latest
    #steps:
      #- name: Check out runtime source code
        #uses: actions/checkout@v4
        #with:
          #ref: refs/tags/v${{env.RUNTIME_VERSION}}-${{env.RUNTIME_PATCH}}
      #- name: Build CLR for Windows
        #run: .\build.cmd clr -c Release /p:OfficialBuildId=20201010.1
      #- name: Upload mscordaccore artifact
        #uses: actions/upload-artifact@v4
        #with:
          #name: mscordaccore.dll
          #path: artifacts/bin/coreclr/Linux.x64.Release/x64/mscordaccore.dll
  package-and-release:
    runs-on: ubuntu-latest
    #needs: 
    #  - build-linux
    #  - build-windows
    steps:
      - name: TEMP download runtime
        run: |
          wget https://github.com/criteo-forks/runtime/actions/runs/11331676346/artifacts/2054325787
          unzip linux-runtime.zip
          ls -al
      #- name: Download .Net runtime artifact
      #  uses: actions/download-artifact@v4
      #  with:
      #    name: linux-runtime
      #    path: .
      #- name: Download mscordaccore artifact
      #  uses: actions/download-artifact@v4
      #  with:
      #    name: mscordaccore.dll
      #    path: .
      - name : Download dotnet install scripts
        run: wget https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh
      - name: Retrieve official ASP.Net Core runtime
        run: |
          chmod u+x ./dotnet-install.sh
          mkdir -p dotnet-runtime
          ./dotnet-install.sh --runtime aspnetcore --version ${{env.RUNTIME_VERSION}} --os linux --install-dir ./dotnet-runtime/
      - name: Extract dotnet runtime artifact and inject official AspNetCore artifact
        run: | 
          mkdir workdir
          cd workdir
          
      #TODO Package new runtime containing ASPNetCore
      - name: Create release
        uses: softprops/action-gh-release@v2
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          name: v${{env.RUNTIME_VERSION}}-${{env.RUNTIME_PATCH}}
          body: Release created from GitHub actions
          files: | 
            dotnet-runtime-${{env.RUNTIME_VERSION}}-${{env.RUNTIME_PATCH}}-linux-x64.tar.gz
            mscordaccore.dll
          draft: true
  
  
